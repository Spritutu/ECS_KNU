<UserControl x:Class="ECS.UI.View.LaserControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ECS.UI.View"
             xmlns:localCtl="clr-namespace:ECS.UI.Resources.Controls"                
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             
             xmlns:Converter="clr-namespace:ECS.UI.Converter"
             xmlns:Command="clr-namespace:ECS.UI" 
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="1600">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/Resources/ResourceDictionary.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>

    <UserControl.DataContext>
        <Binding Path="LaserControlViewModel" Source="{StaticResource Locator}"/>
    </UserControl.DataContext>

    <Grid>
        <Grid.Resources>
            <Converter:BusyStatusToStringConverter x:Key="BusyStatusToStringConverter"/>
            <Converter:ErrorStatusToStringConverter x:Key="ErrorStatusToStringConverter"/>
            <Converter:PositionAckStatusToStringConverter x:Key="PositionAckStatusToStringConverter"/>
            <Converter:PowerStatusToStringConverter x:Key="PowerStatusToStringConverter"/>
            <Converter:TempStatusToStringConverter x:Key="TempStatusToStringConverter"/>
            <Converter:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <GroupBox Header="◎ LASER CONTROL" Margin="0,0,5,5" Grid.Column="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserOn}" OnColor="#FFAEEA00" OffColor="DarkGreen" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="LASER ON" VerticalAlignment="Center" FontSize="12" Width="70"/>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="2" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserAssigned}" OnColor="#FFAEEA00" OffColor="DarkGreen" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="ASSIGNED" VerticalAlignment="Center" FontSize="12" Width="70"/>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="2" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserReady}" OnColor="#FFAEEA00" OffColor="DarkGreen" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="READY" VerticalAlignment="Center" FontSize="12" Width="70"/>
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserProgramActive}" OnColor="#FFAEEA00" OffColor="DarkGreen" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="P-ACTIVE" VerticalAlignment="Center" FontSize="12" Width="70"/>
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserProgramCompleted}" OnColor="#FFAEEA00" OffColor="DarkGreen" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="COMP." VerticalAlignment="Center" FontSize="12" Width="70"/>
                    <localCtl:LEDControl Width="20" Height="20" VerticalAlignment="Stretch" IsChecked="{Binding IsLaserFault}" OnColor="#FF0000" OffColor="DarkRed" Background="Transparent" IsHitTestVisible="False" Focusable="False"/>
                    <Label Content="FAULT" VerticalAlignment="Center" FontSize="12" Width="70"/>

                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1">
                    <Button Content="{Binding LaserStopButtonContent}" Command="{Binding LaserStopButtonCommand}" IsEnabled="{Binding LaserStopButtonEnable}" Width="120" FontSize="12"/>
                    <Button Content="{Binding LaserResetButtonContent}" Command="{Binding LaserResetButtonCommand}" IsEnabled="{Binding LaserResetButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <Button Content="{Binding LaserOnButtonContent}" Command="{Binding LaserOnButtonCommand}" IsEnabled="{Binding LaserOnButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <Button Content="{Binding LaserRequestButtonContent}" Command="{Binding LaserRequestButtonCommand}" IsEnabled="{Binding LaserRequestButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <Button Content="{Binding LaserProgramSetButtonContent}" Command="{Binding LaserProgramSetButtonCommand}" IsEnabled="{Binding LaserProgramSetButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <mah:NumericUpDown Value="{Binding LaserProgramNo}" Minimum="0" Maximum="1" Margin="5" HorizontalContentAlignment="Center" Width="100">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <mvvm:EventToCommand Command="{Binding LaserProgramNoValueChanged}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </mah:NumericUpDown>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0">
                    <Label Content="Laser-Power(%)" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <mah:NumericUpDown Value="{Binding LaserPowerPercent}" Minimum="0" Maximum="100" Margin="5" HorizontalContentAlignment="Center" Width="100">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <mvvm:EventToCommand Command="{Binding LaserPowerPercentValueChanged}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </mah:NumericUpDown>
                    <Button Content="{Binding LaserShutterButtonContent}" Command="{Binding LaserShutterButtonCommand}" IsEnabled="{Binding LaserShutterButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <Button Content="{Binding PilotLaserOnOffButtonContent}" Command="{Binding PilotLaserOnOffButtonCommand}" IsEnabled="{Binding PilotLaserOnOffButtonEnable}" Visibility="Hidden" Width="120" Margin="5" FontSize="12"/>
                </StackPanel>
            </Grid>
        </GroupBox>

        <GroupBox Header="◎ SCANNER CONTROL" Margin="0,0,5,5" Grid.Column="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="2">
                    <TextBox Text="{Binding ScanBusyStatus, Converter={StaticResource BusyStatusToStringConverter}}" IsReadOnly="True" Width="100" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" Margin="5" HorizontalContentAlignment="Center"/>
                    <TextBox Text="{Binding ScanErrorStatus, Converter={StaticResource ErrorStatusToStringConverter}}" IsReadOnly="True" Width="100" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" Margin="5" HorizontalContentAlignment="Center"/>
                    <TextBox Text="{Binding ScanPositionAckStatus, Converter={StaticResource PositionAckStatusToStringConverter}}" IsReadOnly="True"  Width="100" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" Margin="5" HorizontalContentAlignment="Center"/>
                    <TextBox Text="{Binding ScanPowerStatus, Converter={StaticResource PowerStatusToStringConverter}}" IsReadOnly="True" Width="100" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" Margin="5" HorizontalContentAlignment="Center"/>
                    <TextBox Text="{Binding ScanTempStatus, Converter={StaticResource TempStatusToStringConverter}}" IsReadOnly="True" Width="100" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" Margin="5" HorizontalContentAlignment="Center"/>
                    <!--<Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanBusyStatus, Converter={StaticResource BusyStatusToStringConverter}}" Width="100"/>
                    </Label>
                    <Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanErrorStatus, Converter={StaticResource ErrorStatusToStringConverter}}" Width="100"/>
                    </Label>
                    <Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanPositionAckStatus, Converter={StaticResource PositionAckStatusToStringConverter}}" Width="100"/>
                    </Label>
                    <Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanPowerStatus, Converter={StaticResource PowerStatusToStringConverter}}" Width="100"/>
                    </Label>
                    <Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanTempStatus, Converter={StaticResource TempStatusToStringConverter}}" Width="100"/>
                    </Label>-->
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center">
                    <Label Content="{Binding ScanProcessFilePath}" Width="380" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="White" HorizontalContentAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="5"/>
                    <!--<Label Style="{DynamicResource 7SegmentsBox}" VerticalContentAlignment="Center" FontSize="12" Margin="5,5,5,5">
                        <TextBlock Text="{Binding ScanProcessFilePath}" Width="380"/>
                    </Label>-->
                    <Button Content="..." Command="{Binding FileOpenButtonCommand}" Width="50" Margin="5"/>
                    <Label Content="Repeat(회)" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="12" Width="70"/>
                    <mah:NumericUpDown Value="{Binding ProcessRepeat}" Minimum="1" Maximum="100" Margin="5" HorizontalContentAlignment="Center" Width="100">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <mvvm:EventToCommand Command="{Binding ProcessRepeatValueChanged}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </mah:NumericUpDown>
                    <Button Content="{Binding ScanProcessButtonContent}" Command="{Binding ScanProcessButtonCommand}" IsEnabled="{Binding ScanProcessButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <Button Content="{Binding AirCleanningButtonContent}" Command="{Binding AirCleanningButtonCommand}" IsEnabled="{Binding AirCleanningButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                    <Button Content="{Binding AirBlowButtonContent}" Command="{Binding AirBlowButtonCommand}" IsEnabled="{Binding AirBlowButtonEnable}" Width="120" Margin="5" FontSize="12"/>
                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
